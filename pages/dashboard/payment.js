import Dashboard from '../../components/DashboardNavigation';
import { useSession, getSession } from 'next-auth/react';
import Head from 'next/head';
import { BiSave, BiPencil } from 'react-icons/bi';
import { useState } from 'react';
import Image from 'next/image';

export default function Payment() {
  const { data: session, status } = useSession();
  const [edit, setEdit] = useState(false);
  const allowEdit = () => setEdit(!edit);
  const [edit2, setEdit2] = useState(false);
  const allowEdit2 = () => setEdit2(!edit2);

  if (status === 'authenticated') {
    return (
      <div className="dark:bg-[url('/slider/dark_bg.jpg')] bg-[url('/slider/profile_back.jpg')] min-h-screen h-full bg-cover overflow-x-hidden lg:bg-gradient-to-br dark:lg:bg-gradient-to-br dark:lg:from-gray-600 lg:from-cyan-100 dark:lg:to-gray-900 dark:md:from-gray-600  dark:md:to-gray-900 lg:to-blue-300 md:bg-gradient-to-br dark:md:bg-gradient-to-br md:from-cyan-100 md:to-blue-300">
        <Head>
          <title>Ilife: Payment</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon_io/favicon.ico" />
        </Head>

        <Dashboard />
        <main className="mx-2 mt-28 mb-4 lg:ml-44 lg:mr-2 lg:mx-0 lg:my-0 lg:mt-7">
          <section className="flex gap-16 flex-wrap">
            <div className="dashboard_cards">
              <Image
                className="absolute -top-0 -left-0 -z-10 opacity-30"
                src="/blob2.svg"
                width={370}
                height={370}
                alt="blob"
              />
              <h1 className="font-bold text-xl lg:text-2xl mb-10">
                Payment Information
              </h1>
              <div>
                <form className="flex flex-col gap-6 mb-6">
                  <label className="flex justify-between lg:gap-10 items-center font-semibold">
                    Country:
                    <input
                      className="text-gray-600 p-2 w-3/5 rounded-md"
                      disabled={edit ? false : true}
                    ></input>
                  </label>
                  <label className="flex justify-between lg:gap-10 items-center font-semibold">
                    State/Province:
                    <input
                      className="text-gray-600 p-2 w-3/5 rounded-md"
                      disabled={edit ? false : true}
                    ></input>
                  </label>
                  <label className="flex justify-between lg:gap-10 items-center font-semibold">
                    Address:
                    <input
                      className="text-gray-600 p-2 w-3/5 rounded-md"
                      disabled={edit ? false : true}
                    ></input>
                  </label>
                  <label className="flex justify-between lg:gap-10 items-center font-semibold">
                    Postal code:
                    <input
                      className="text-gray-600 p-2 w-3/5 rounded-md"
                      disabled={edit ? false : true}
                    ></input>
                  </label>
                </form>
                <div className="flex flex-row gap-3 justify-end">
                  <button
                    className=" bg-icons text-white text-2xl p-3 rounded-3xl hover:rounded-xl transition-all duration-200 ease-linear"
                    onClick={allowEdit}
                  >
                    {edit ? (
                      <BiSave />
                    ) : (
                      <>
                        <BiPencil />
                      </>
                    )}
                  </button>
                </div>
              </div>
            </div>
            <div className="dashboard_cards">
              <Image
                className="absolute -top-0 -left-0 -z-10 opacity-30"
                src="/blob3.svg"
                width={370}
                height={370}
                alt="blob"
              />
              <h1 className="font-bold text-xl lg:text-2xl mb-10">
                Card Information
              </h1>
              <div>
                <form className="flex flex-col gap-6 mb-6">
                  <label className="flex justify-between lg:gap-10 items-center font-semibold">
                    Holder&apos;s name:
                    <input
                      className="text-gray-600 p-2 w-3/5 rounded-md"
                      disabled={edit2 ? false : true}
                    ></input>
                  </label>
                  <div className="flex">
                    <label className="flex flex-col justify-between gap-4 items-start font-semibold">
                      Card Number:
                      <input
                        className="text-gray-600 p-2 w-4/5 rounded-md"
                        disabled={edit2 ? false : true}
                      ></input>
                    </label>

                    <label className="flex flex-col justify-between gap-4 items-start font-semibold">
                      CCV:
                      <input
                        className="text-gray-600 p-2 w-4/5 rounded-md"
                        disabled={edit2 ? false : true}
                      ></input>
                    </label>
                  </div>
                </form>
                <div className="flex flex-row gap-3 justify-end">
                  <button
                    className=" bg-icons text-white text-2xl p-3 rounded-3xl hover:rounded-xl transition-all duration-200 ease-linear"
                    onClick={allowEdit2}
                  >
                    {edit2 ? (
                      <BiSave />
                    ) : (
                      <>
                        <BiPencil />
                      </>
                    )}
                  </button>
                </div>
              </div>
            </div>
          </section>
        </main>
      </div>
    );
  }
}

export async function getServerSideProps({ req }) {
  const session = await getSession({ req });

  if (!session) {
    return {
      redirect: {
        destination: '/',
        pernament: false,
      },
    };
  }

  return {
    props: { session },
  };
}
